input {
  jdbc {
    jdbc_connection_string =>"jdbc:postgresql://${DB_HOST}/pika"
    jdbc_user => "${DB_USER}"
    jdbc_password => "${DB_PASS}"
    jdbc_driver_class => "org.postgresql.Driver"
    schedule => "20 * * * * *"
    # schedule => "20 */5 * * * *"
    statement => 'SELECT "projects"."id","tasks"."id" as "taskId","projects"."createdAt","projects"."updatedAt","projects"."deletedAt","projects"."type","projects"."name","projects"."genre","projects"."runtime","projects"."sourceLanguageCode","projects"."targetLanguageCode","tasks"."targetLanguageCode" as "task_targetLanguageCode","projects"."requestedAt","projects"."dueAt","projects"."duration","projects"."status","tasks"."status" as "task_status","projects"."amountPro","projects"."amountClient","projects"."userId","user"."email","projects"."amountPaid","projects"."isSelf","projects"."isCrowdFunding","projects"."isOnboarding","projects"."isSelfFile","projects"."isHub","projects"."projectGroupId", case when CHAR_LENGTH("projects"."subtitles"::text)>2 then True else False end as "hassubtitle" FROM public."project_entity" as "projects" LEFT JOIN public."Users" as "user" on "user"."id" = "projects"."userId" RIGHT JOIN public."task_entity" as "tasks" on "tasks"."projectId" = "projects"."id"'
    # statement => 'SELECT "projects"."id","tasks"."id" as "taskId","projects"."createdAt","projects"."updatedAt","projects"."deletedAt","projects"."type","projects"."name","projects"."genre","projects"."runtime","projects"."sourceLanguageCode","projects"."targetLanguageCode","tasks"."targetLanguageCode" as "task_targetLanguageCode","projects"."requestedAt","projects"."dueAt","projects"."duration","projects"."status","tasks"."status" as "task_status","projects"."amountPro","projects"."amountClient","projects"."userId","user"."email","projects"."amountPaid","projects"."isSelf","projects"."isCrowdFunding","projects"."isOnboarding","projects"."isSelfFile","projects"."isHub","projects"."projectGroupId", case when CHAR_LENGTH("projects"."subtitles"::text)>2 then True else False end as "hassubtitle" FROM public."project_entity" as "projects" LEFT JOIN public."Users" as "user" on "user"."id" = "projects"."userId" RIGHT JOIN public."task_entity" as "tasks" on "tasks"."projectId" = "projects"."id" where "projects"."updatedAt" > current_date-1'
  }
}
# filter { 
#   mutate { 
#     remove_field => ["password", "address"] 
#   } 
# }


output {
  elasticsearch {
    hosts => ["https://gloz-47a7f3.es.ap-northeast-2.aws.elastic-cloud.com:443"]
    # action => "create"
    index => "platform-projectinfo"
    document_id => "%{id}"
    user => "${ES_USER}"
    password => "${ES_PASS}"
  }
}