# Generated by Django 4.0.2 on 2022-05-20 14:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Characters",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")], max_length=6
                    ),
                ),
                ("age", models.IntegerField()),
                ("job", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "Characters",
            },
        ),
        migrations.CreateModel(
            name="ContentTitles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                ("englishTitle", models.CharField(max_length=150)),
                ("koreanTitle", models.CharField(max_length=150, null=True)),
                (
                    "workType",
                    models.CharField(
                        choices=[("webtoon", "Webtoon"), ("webnovel", "Webnovel")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("client", models.CharField(default="Kakao Ent", max_length=20)),
                (
                    "genre",
                    models.CharField(
                        choices=[
                            ("Fantasy", "Fantasy"),
                            ("Romance", "Romance"),
                            ("Historical", "Historical"),
                            ("Others", "Others"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "sourceLanguage",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("targetLanguage", models.CharField(max_length=10, null=True)),
            ],
            options={
                "db_table": "ContentTitles",
            },
        ),
        migrations.CreateModel(
            name="ErrorTypes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                ("type", models.CharField(max_length=25)),
                ("measure", models.CharField(max_length=25)),
                ("category", models.CharField(max_length=25)),
                ("subcategory1", models.CharField(max_length=50)),
                ("subcategory2", models.CharField(max_length=30, null=True)),
                (
                    "severityLevel",
                    models.CharField(
                        choices=[
                            ("Critical", "Critical"),
                            ("Major", "Major"),
                            ("Minor", "Minor"),
                        ],
                        default="Minor",
                        max_length=100,
                    ),
                ),
            ],
            options={
                "db_table": "ErrorTypes",
            },
        ),
        migrations.CreateModel(
            name="Resources",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=30)),
                ("email", models.CharField(max_length=200, null=True)),
                (
                    "stakeholdersType",
                    models.CharField(
                        choices=[("Internal", "Internal"), ("External", "External")],
                        max_length=10,
                    ),
                ),
                ("sourceLanguage", models.CharField(max_length=10)),
                ("targetLanguage", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "Resources",
            },
        ),
        migrations.CreateModel(
            name="SourceSheetMetaData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                ("sheetId", models.CharField(max_length=50)),
                ("gid", models.CharField(max_length=10)),
                ("type", models.CharField(default="webtoon", max_length=10)),
            ],
            options={
                "db_table": "SourceSheetMetaData",
            },
        ),
        migrations.CreateModel(
            name="TranslationWorks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                ("episodeNumber", models.IntegerField()),
                ("sourceText", models.TextField(null=True)),
                ("targetText", models.TextField()),
                ("isRrated", models.BooleanField(default=False)),
                ("wordCount", models.IntegerField()),
                (
                    "titleId",
                    models.ForeignKey(
                        db_column="titleId",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="content_titles",
                        to="clients_feedback_tracker_api.contenttitles",
                    ),
                ),
                (
                    "wordCountSourceId",
                    models.ForeignKey(
                        db_column="wordCountSourceId",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="word_count_source",
                        to="clients_feedback_tracker_api.sourcesheetmetadata",
                    ),
                ),
            ],
            options={
                "db_table": "TranslationWorks",
            },
        ),
        migrations.CreateModel(
            name="TranslationSentences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                ("situation", models.CharField(max_length=20, null=True)),
                ("detailSituation", models.CharField(max_length=20, null=True)),
                (
                    "characterId",
                    models.ForeignKey(
                        db_column="charactorId",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="characters",
                        to="clients_feedback_tracker_api.characters",
                    ),
                ),
                (
                    "translationWorkId",
                    models.ForeignKey(
                        db_column="translationWorkId",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="all_translation_text",
                        to="clients_feedback_tracker_api.translationworks",
                    ),
                ),
            ],
            options={
                "db_table": "TranslationSentences",
            },
        ),
        migrations.CreateModel(
            name="ResourceRoles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Translator", "Translator"),
                            ("QCer", "Qcer"),
                            ("Desktop publisher", "Desktop Publisher"),
                            ("Proofreader", "Proofreader"),
                            ("Project manager", "Project Manager"),
                            ("Project coodinator", "Project Coodinator"),
                            ("Project assistant", "Project Assistant"),
                            ("Quality manager", "Quality Manager"),
                            ("Language manager", "Language Manager"),
                            ("Designer", "Designer"),
                            ("Point of contact", "Point Of Contact"),
                            ("Junior project manager", "Junior Project Manager"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "resourceId",
                    models.ForeignKey(
                        db_column="resourceId",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resources",
                        to="clients_feedback_tracker_api.resources",
                    ),
                ),
            ],
            options={
                "db_table": "ResourceRoles",
            },
        ),
        migrations.CreateModel(
            name="Feedbacks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                ("feedbackDate", models.DateField(null=True)),
                ("feedbackComments", models.TextField(null=True)),
                ("pmId", models.IntegerField(null=True)),
                ("pocId", models.IntegerField(null=True)),
                ("translatorId", models.IntegerField(null=True)),
                ("qcerId", models.IntegerField(null=True)),
                ("desktopPublisherId", models.IntegerField(null=True)),
                ("proofreaderId", models.IntegerField(null=True)),
                (
                    "sentimentLevel",
                    models.CharField(
                        choices=[
                            ("Positive", "Postitive"),
                            ("Neutral", "Neutral"),
                            ("Negative", "Negative"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "qualityLevel",
                    models.CharField(
                        choices=[
                            ("Expert", "Expert"),
                            ("Great", "Great"),
                            ("Good", "Good"),
                            ("Intermediate", "Intermediate"),
                            ("Acceptable", "Acceptable"),
                            ("Low", "Low"),
                            ("Not Acceptable", "Not Acceptable"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                ("qualityPoint", models.FloatField(null=True)),
                (
                    "errorTypeId",
                    models.ForeignKey(
                        db_column="errorTypeId",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="errortypes",
                        to="clients_feedback_tracker_api.errortypes",
                    ),
                ),
                (
                    "feedbackSourceId",
                    models.ForeignKey(
                        db_column="feedbackSourceId",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feedback_source",
                        to="clients_feedback_tracker_api.sourcesheetmetadata",
                    ),
                ),
                (
                    "managementSourceId",
                    models.ForeignKey(
                        db_column="managementSourceId",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="management_source",
                        to="clients_feedback_tracker_api.sourcesheetmetadata",
                    ),
                ),
                (
                    "translationWorkId",
                    models.ForeignKey(
                        db_column="translationWorkId",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="translation_works",
                        to="clients_feedback_tracker_api.translationworks",
                    ),
                ),
            ],
            options={
                "db_table": "Feedbacks",
            },
        ),
        migrations.AddField(
            model_name="characters",
            name="titleId",
            field=models.ForeignKey(
                db_column="titleId",
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="character_from_title",
                to="clients_feedback_tracker_api.contenttitles",
            ),
        ),
    ]
